{"version":3,"sources":["serviceWorker.js","Components/Appbar/Appbar.js","Components/BannerSection/BannerSection.js","Components/GenericComponents/Skillbar/Skillbar.js","Components/AboutSection/AboutSection.js","Components/GenericComponents/ImgMediaCard/ImgMediaCard.js","Components/ProjectsSection/ProjectsSection.js","Components/ContactSection/ContactSection.js","index.js"],"names":["Boolean","window","location","hostname","match","scroller","require","AppBarClass","props","handleScroll","bind","state","appBarSolid","count","description","addEventListener","this","removeEventListener","e","pageYOffset","setState","classes","click","element","offset","scrollTo","duration","delay","smooth","Fragment","CssBaseline","AppBar","position","className","AppBarSolid","AppBarTransparent","elevation","Toolbar","Typography","Logo","variant","Hidden","smDown","Button","onClick","AppbarLinks","React","Component","withStyles","theme","backgroundColor","color","fontFamily","fontWeight","letterSpacing","paddingLeft","paddingRight","BannerSectionClass","copyToClipBoard","content","navigator","clipboard","writeText","openToast","handleClose","event","reason","timerID","setInterval","tick","clearInterval","descriptions","counter","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","message","action","size","IconButton","aria-label","fontSize","Container","BannerBackground","maxWidth","descriptor","buttonsContainer","button","url","href","padding","height","display","minWidth","marginLeft","justifyContent","marginTop","Skillbar","completed","skills","ColorLinearProgress","colorPrimary","barColorPrimary","LinearProgress","root","map","skill","index","skillbar","name","key","skillDescriptor","type","level","linearBar","value","width","paddingTop","useStyles","makeStyles","AboutSectionBackground","minHeight","gridHeight","gridContainer","paddingBottom","paperHeight","responsiveImage","expertiseTitle","marginBottom","ProjectButton","borderColor","border","boxShadow","SKILLS","AboutSection","Grid","container","spacing","item","xs","sm","md","Paper","subContent","cardContent","divider","cardActions","ImgMediaCard","project","input","Card","CardActionArea","CardMedia","component","alt","image","mediaImage","title","CardContent","gutterBottom","Divider","light","CardActions","gridItems","flexDirection","alignItems","rounded","borderTop","borderRadius","projects","ProjectsSection","lg","Scroll","scroll","animateScroll","contactBackground","icon","gridItem","Links","Naming","ContactSection","useState","setOpen","List","ListItem","scrollToTop","ListItemIcon","ListItemText","primary","createMuiTheme","breakpoints","values","xl","ReactDOM","render","ThemeProvider","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.8bc10c32.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Button from '@material-ui/core/Button';\r\nimport './Appbar.css'\r\nvar Scroll = require('react-scroll');\r\nvar scroller = Scroll.scroller;\r\nconst styles = theme => ({\r\n    AppBarSolid: {\r\n      backgroundColor:\"#101010\"\r\n    },\r\n    AppBarTransparent:{\r\n      backgroundColor:\"Transparent\"\r\n    },\r\n    Logo:{\r\n      color:'black',\r\n      fontFamily:'\"Bebas Neue\",cursive',\r\n      fontWeight:'700',\r\n      backgroundColor:'white',\r\n      letterSpacing:'0.1em',\r\n      paddingLeft:'5px',\r\n      paddingRight:'5px'\r\n    },\r\n    AppbarLinks:{\r\n      color:'white',\r\n      fontFamily:'\"Bebas Neue\",cursive',\r\n      fontWeight:'400',\r\n      letterSpacing:'0.2em',\r\n    }\r\n})\r\nclass AppBarClass extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.handleScroll = this.handleScroll.bind(this);\r\n    this.state = {\r\n      appBarSolid:false,\r\n      count:1,\r\n      description:''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('scroll', this.handleScroll);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener('scroll', this.handleScroll);\r\n  }\r\n  handleScroll(e) {\r\n    //console.log('scroll event');\r\n    //console.log(window.pageYOffset);\r\n    if(window.pageYOffset === 0){\r\n      this.setState({\r\n        appBarSolid:false\r\n      })\r\n    }else{\r\n      this.setState({\r\n        appBarSolid:true\r\n      })\r\n    }\r\n  }\r\n  render(){\r\n    const { classes } = this.props;\r\n    const click = (element,offset)=>scroller.scrollTo(element, {\r\n      duration: 1500,\r\n      delay: 100,\r\n      smooth: true,\r\n      offset: offset, // Scrolls to element + 50 pixels down the page\r\n      \r\n    });\r\n    return(\r\n      <React.Fragment>\r\n        <CssBaseline />\r\n            <AppBar position=\"fixed\" className={this.state.appBarSolid? classes.AppBarSolid : classes.AppBarTransparent } elevation={this.state.appBarSolid? \"4\" : \"0\" }>\r\n              <Toolbar>\r\n                <div className=\"toolbarContent\">\r\n                  <Typography className={classes.Logo} variant=\"h4\">C.L</Typography>\r\n                  <Hidden smDown>\r\n                    <div className=\"links\">\r\n                      <Button onClick={()=>click(\"myAbout\",-100)}><Typography className={classes.AppbarLinks} variant=\"h6\">About</Typography></Button>\r\n                      <Button onClick={()=>click(\"myProjects\",50)}><Typography className={classes.AppbarLinks} variant=\"h6\">Projects</Typography></Button>\r\n                      <Button onClick={()=>click(\"myContact\",0)}><Typography className={classes.AppbarLinks} variant=\"h6\">Contact</Typography></Button>\r\n                    </div>\r\n                  </Hidden>\r\n                </div>  \r\n              </Toolbar>\r\n            </AppBar>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nAppBarClass.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(AppBarClass);\r\n","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport './BannerSection.css';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nconst styles = theme => ({\r\n  BannerBackground: {\r\n    backgroundColor:\"black\",\r\n    padding:0,\r\n    height:'100%'\r\n  },\r\n  descriptor:{\r\n    display:'inline-flex',\r\n    backgroundColor:'#fde400',\r\n    color:'#101820FF',\r\n    fontWeight:'700',\r\n    paddingLeft:'5px',\r\n    paddingRight:'5px',\r\n    minWidth:'260px',\r\n    marginLeft:'5px',\r\n    justifyContent:'center'\r\n  },\r\n  buttonsContainer:{\r\n    display:'flex',\r\n    justifyContent:'center',\r\n    marginTop:'10px',\r\n  },\r\n  button:{\r\n    paddingLeft:'10px',\r\n    paddingRight:'10px',\r\n    color:'white'\r\n  }\r\n})\r\n// #FEE715FF\r\nclass BannerSectionClass extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      count:1,\r\n      description:'Backend Developer',\r\n      openToast:false\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.timerID = setInterval(\r\n      () => this.tick(),\r\n      5000\r\n    );\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerID);\r\n  }\r\n  tick() {\r\n    const descriptions = [\"Backend Developer\",\"Devops Engineer\",\"Tech Enthusiast\"]\r\n    var counter = this.state.count;\r\n    var description = \"\";\r\n    if(counter===3){\r\n      description = descriptions[0];\r\n      counter = 1\r\n    }else if(counter===1){\r\n      description = descriptions[1];\r\n      counter = counter+1;\r\n    }else if(counter===2){\r\n      description = descriptions[2];\r\n      counter = counter+1;\r\n    }\r\n    this.setState(({\r\n      count: counter,\r\n      description:description\r\n    }));\r\n    //console.log(counter);\r\n    //console.log(description)\r\n  }\r\n  copyToClipBoard = (content) =>{\r\n    navigator.clipboard.writeText(content);\r\n    //console.log(\"copyToClipBoard\")\r\n    this.setState(({\r\n      openToast:true\r\n    }))\r\n  }\r\n  handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    this.setState(({\r\n      openToast:false\r\n    }))\r\n  };\r\n  render(){\r\n    const { classes } = this.props;\r\n    const externalLink = (url) => {\r\n      window.location.href = url\r\n    }\r\n    return(\r\n      <React.Fragment>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'left',\r\n          }}\r\n          open={this.state.openToast}\r\n          autoHideDuration={6000}\r\n          onClose={()=>this.handleClose()}\r\n          message=\"My email is copied to your clipboard\"\r\n          action={\r\n            <React.Fragment>\r\n              <Button color=\"secondary\" size=\"small\" onClick={()=>this.handleClose()}>\r\n                Close\r\n              </Button>\r\n              <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={()=>this.handleClose()}>\r\n                <CloseIcon fontSize=\"small\" />\r\n              </IconButton>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n        <Container className={classes.BannerBackground} maxWidth={false}>\r\n          <div className=\"hero-image\">\r\n            <div className=\"hero-text\">\r\n              <h1 className=\"bigname\">I am Christopher Lim</h1>\r\n              And I'm a <div className={classes.descriptor}>{this.state.description}</div>\r\n              <div className={classes.buttonsContainer}>\r\n                <div >\r\n                  <IconButton className={classes.button} onClick={()=>externalLink('http://www.linkedin.com/in/christopher-limht')}>\r\n                    <i className=\"fab fa-linkedin\"></i>\r\n                  </IconButton>\r\n                </div>\r\n                <div>\r\n                  <IconButton className={classes.button} onClick={()=>this.copyToClipBoard('christopherlimht@gmail.com')}>\r\n                    <i className=\"fas fa-envelope\"></i>\r\n                  </IconButton>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(BannerSectionClass);","import React from 'react';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport { withStyles } from '@material-ui/styles';\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    marginTop:\"15px\",\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop:'10px',\r\n    },\r\n  },\r\n  skillbar:{\r\n      paddingTop:'5px'\r\n  },\r\n  linearBar:{\r\n      height:'10px',\r\n  },\r\n  skillDescriptor:{\r\n      display:'flex',\r\n      justifyContent:'space-between'\r\n  }\r\n});\r\n\r\nclass Skillbar extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            completed:50,\r\n        }\r\n    }\r\n    render(){\r\n        const { classes,skills } = this.props;\r\n        const ColorLinearProgress = withStyles({\r\n            colorPrimary: {\r\n              backgroundColor: '#add2c9',\r\n            },\r\n            barColorPrimary: {\r\n              backgroundColor: '#5ea3a3',\r\n            },\r\n        })(LinearProgress);\r\n        return (\r\n            <div className={classes.root}>\r\n                {skills.map((skill, index) =>\r\n                    <div className={classes.skillbar} name=\"skillbar\" key={index}>\r\n                        <div name=\"skillDescriptor\" className={classes.skillDescriptor}>\r\n                            <span>{skill.type}</span>\r\n                            <span>{skill.level}%</span>\r\n                        </div>\r\n                        <ColorLinearProgress className={classes.linearBar} variant=\"determinate\" value={skill.level} />\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Skillbar);","import React from 'react';\r\nimport { makeStyles,withStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport \"./AboutSection.css\";\r\nimport Skillbar from '../GenericComponents/Skillbar/Skillbar';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport { Element } from 'react-scroll'\r\nvar Scroll = require('react-scroll');\r\nvar scroller = Scroll.scroller;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    AboutSectionBackground: {\r\n      backgroundColor:\"white\",\r\n      minHeight:'calc(60vh)',\r\n      height:'100%'\r\n    },\r\n    gridHeight:{\r\n        height:'100%'\r\n    },\r\n    gridContainer:{\r\n        paddingTop:'80px',\r\n        paddingBottom:'60px',\r\n        height:'100%'\r\n    },\r\n    paperHeight:{\r\n        height:'100%',\r\n        minHeight:\"600px\"\r\n    },\r\n    responsiveImage:{\r\n        width: 'auto',\r\n        height: '100%',\r\n    },\r\n    content:{\r\n        height:'auto',\r\n    },\r\n    expertiseTitle:{\r\n        marginBottom:'10px'\r\n    }\r\n  })\r\n)\r\nconst ProjectButton = withStyles((theme) => ({\r\n    root: {\r\n      backgroundColor: 'white',\r\n      color: '#488b8f',\r\n      borderColor: '#488b8f',\r\n      border: '1px solid',\r\n      '&:hover': {\r\n        backgroundColor: '#faf9f9',\r\n        boxShadow: 'none',\r\n      },\r\n    },\r\n}))(Button);\r\n\r\n\r\nconst SKILLS = [\r\n    {type: \"Java\", level: 70},\r\n    {type: \"C#\", level: 55},\r\n    {type: \"Node.js\", level: 75},\r\n    {type: \"Javascript\", level: 75},\r\n    {type: \"Angular\", level: 40},\r\n    {type: \"React\", level: 40},\r\n    {type: \"Python\", level: 40},\r\n    {type: \"Shell-scripting\", level: 45},\r\n];\r\n\r\nfunction AboutSection() {\r\n    const click = ()=>scroller.scrollTo('myProjects', {\r\n        duration: 1500,\r\n        delay: 100,\r\n        smooth: true,\r\n        offset: -100, // Scrolls to element + 50 pixels down the page\r\n        \r\n    });\r\n    const classes = useStyles();\r\n    return (\r\n        <Element name=\"myAbout\">\r\n        <React.Fragment>\r\n            <Container className={classes.AboutSectionBackground} maxWidth={false}>\r\n                <Container className={classes.gridContainer} width='xl'>\r\n                    <Grid container spacing={3} className={classes.gridHeight}>\r\n                        <Grid item xs={6} sm={6} md={5}>\r\n                            <Paper className={classes.paperHeight} elevation='0'>\r\n                                <Grid className={classes.content} container spacing={1}>\r\n                                    <Grid item xs={12}>\r\n                                        <Typography name=\"title\" variant=\"h4\">About me</Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <div name=\"subContent\" className={classes.subContent}>\r\n                                            <p>\r\n                                                Christopher here, I am a developer based in Singapore.\r\n                                                I am currently working as a devops engineer at Singtel, where my job scope revolves around developing automated solutions, helping my clients improve their workflows.\r\n                                            </p>\r\n                                            <p>\r\n                                                I am also a trained developer, having worked on a number of different projects which required knowledge in a wide range of languages, from developing microservices on NodeJS using javascript to developing chef inspec profiles using ruby.\r\n                                                Being a tech enthusiast, I would be spending my free time either on exploring new technologies such as 3D graphics or tinkering and setting up my own computer systems and home labs.\r\n                                            </p>\r\n                                            <p>\r\n                                                Through this small portfolio website of mine, I hope to showcase my skills and interests through projects I have completed in my free time.\r\n                                            </p>\r\n                                        </div>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <div name=\"buttonGroup\">\r\n                                            <ProjectButton variant=\"contained\" onClick={()=>click()}>\r\n                                                My Projects\r\n                                            </ProjectButton>\r\n                                        </div>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Paper>\r\n                        </Grid>\r\n                        <Hidden smDown>\r\n                            <Grid item xs={3}>\r\n                                <Paper className={classes.paperHeight} elevation='0'>\r\n                                    <div className=\"about-image\">                                   \r\n                                    </div>\r\n                                </Paper>\r\n                            </Grid>\r\n                        </Hidden>\r\n                        \r\n                        <Grid item xs={6} sm={6} md={4}>\r\n                            <Paper className={classes.paperHeight} elevation='0'>\r\n                                <Typography className={classes.expertiseTitle} name=\"title\" variant=\"h4\">My Expertise</Typography>\r\n                                <Skillbar skills={SKILLS}></Skillbar>\r\n                            </Paper>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n            </Container>\r\n        </React.Fragment>\r\n        </Element>\r\n    );\r\n}\r\n\r\nexport default AboutSection;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: '250px',\r\n    maxWidth: '300px'\r\n  },\r\n  cardContent:{\r\n    paddingBottom:'0px'\r\n  },\r\n  divider:{\r\n    marginTop:'16px'\r\n  },\r\n  cardActions:{\r\n    paddingLeft:'11px'\r\n  }\r\n});\r\n\r\nexport default function ImgMediaCard(props) {\r\n  const classes = useStyles();\r\n  const externalLink = (url) => {\r\n    window.location.href = url\r\n  }\r\n  const project = props.input\r\n  //console.log(project);\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          component=\"img\"\r\n          alt=\"Contemplative Reptile\"\r\n          height=\"140\"\r\n          image={project.mediaImage}\r\n          title=\"Contemplative Reptile\"\r\n        />\r\n        <CardContent className={classes.cardContent}>\r\n          <Typography gutterBottom variant=\"h6\">\r\n            {project.title}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {project.cardContent}\r\n          </Typography>\r\n          <Divider light className={classes.divider}/>         \r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions className={classes.cardActions}>\r\n        <Button size=\"small\" color=\"primary\" onClick={()=>externalLink(project.url)}>\r\n          Code Repo\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Element } from 'react-scroll'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ImgMediaCard from '../GenericComponents/ImgMediaCard/ImgMediaCard';\r\nimport { Typography } from '@material-ui/core';\r\nconst useStyles = makeStyles(theme => ({\r\n    BannerBackground: {\r\n      backgroundColor:\"#f6f5f5\",\r\n      minHeight:`calc(70vh)`\r\n    },\r\n    gridContainer:{\r\n        paddingTop:'90px',\r\n        paddingBottom:'112px',\r\n        height:'100%'\r\n    },\r\n    gridItems:{\r\n      display:'flex',\r\n      justifyContent:'center'\r\n    },\r\n    title:{\r\n      display:'flex',\r\n      flexDirection:'column',\r\n      justifyContent:'center',\r\n      alignItems:'center',\r\n      marginBottom:'40px'\r\n    },\r\n    rounded:{\r\n      borderTop: \"2px solid #bbb\",\r\n      borderRadius: \"5px\",\r\n      width:\"60%\",\r\n      maxWidth:'200px',\r\n      marginTop:'20px'\r\n    }\r\n  })\r\n)\r\n\r\nconst projects = [\r\n  {title: \"Portfolio Website\", mediaImage: \"./website.jpg\",cardContent:\"Portfolio website for github pages and showcasing of projects\",url:\"https://github.com/christopherlimht/christopherlimht.github.io\"},\r\n];\r\n\r\nfunction ProjectsSection() {\r\n    const classes = useStyles();\r\n    return (\r\n        <React.Fragment>\r\n            <Container className={classes.BannerBackground} maxWidth={false}>\r\n              <Container className={classes.gridContainer} width='xl'>\r\n                <div name=\"title\" className={classes.title}>\r\n                  <Element name=\"myProjects\">\r\n                    <Typography variant=\"h4\" >My projects</Typography>\r\n                  </Element>\r\n                  <hr className={classes.rounded}></hr>\r\n                </div>\r\n                \r\n                <Grid container spacing={3}>\r\n                  {projects.map((project, index) =>\r\n                    <Grid item xs={12} sm={6} md={6} lg={4} className={classes.gridItems} key={index}>\r\n                      <ImgMediaCard input={project}></ImgMediaCard>\r\n                    </Grid>\r\n                  )}\r\n                </Grid>\r\n              </Container>\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default ProjectsSection;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Grid, Divider } from '@material-ui/core';\r\nimport { Element } from 'react-scroll'\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport VerticalAlignTopIcon from '@material-ui/icons/VerticalAlignTop';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport \"./ContactSection.css\"\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\nvar Scroll = require('react-scroll');\r\nvar scroll = Scroll.animateScroll;\r\nvar scroller = Scroll.scroller;\r\nconst useStyles = makeStyles(theme => ({\r\n    contactBackground: {\r\n      backgroundColor:\"#101010\",\r\n      color:'white',\r\n      height:\"100%\",\r\n      display:'flex',\r\n      alignItems:'center',\r\n      paddingTop:\"20px\",\r\n      paddingBottom:'10px'\r\n    },\r\n    gridContainer:{\r\n      height:\"100%\",\r\n      display:'flex',\r\n      justifyContent:'center',\r\n    },\r\n    icon:{\r\n      color:\"white\",\r\n      fontSize:'2em',\r\n      display:'flex',\r\n      justifyContent:\"center\"\r\n    },\r\n    divider:{\r\n      border:'1px solid',\r\n      height:\"100%\"\r\n    },\r\n    gridItem:{\r\n      height:\"100%\"\r\n    },\r\n    Logo:{\r\n      color:'black',\r\n      display:\"inline\",\r\n      fontFamily:'\"Bebas Neue\",cursive',\r\n      fontWeight:'700',\r\n      backgroundColor:'white',\r\n      letterSpacing:'0.1em',\r\n      paddingLeft:'5px',\r\n      paddingRight:'5px',\r\n      width:\"fit-content\"\r\n    },\r\n    Links:{\r\n      color:'white',\r\n      marginLeft:\"25px\",\r\n    },\r\n    Naming:{\r\n      color:'white',\r\n      marginLeft:\"10px\",\r\n      display:'inline'\r\n    },\r\n  })\r\n)\r\n\r\nfunction ContactSection() {\r\n    const classes = useStyles();\r\n    const click = (element,offset)=>scroller.scrollTo(element, {\r\n      duration: 1500,\r\n      delay: 100,\r\n      smooth: true,\r\n      offset: offset, // Scrolls to element + 50 pixels down the page\r\n      \r\n    });\r\n    const externalLink = (url) => {\r\n      window.location.href = url\r\n    }\r\n    const [open, setOpen] = React.useState(false);\r\n    const copyToClipBoard = (content) =>{\r\n      navigator.clipboard.writeText(content);\r\n      //console.log(\"copyToClipBoard\")\r\n      setOpen(true);\r\n    }\r\n    const handleClose = (event, reason) => {\r\n      if (reason === 'clickaway') {\r\n        return;\r\n      }\r\n      setOpen(false);\r\n    };\r\n    return (\r\n      \r\n      <Element name=\"myContact\">\r\n      <React.Fragment>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n        message=\"My email is copied to your clipboard\"\r\n        action={\r\n          <React.Fragment>\r\n            <Button color=\"secondary\" size=\"small\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\r\n              <CloseIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n          <Container className={classes.contactBackground} maxWidth={false}>\r\n            <Container width='xl'>\r\n              <Grid container name=\"contactSection\" className={classes.gridContainer}>\r\n                <Grid item xs>\r\n                  <Typography className={classes.Links} variant=\"h6\">Quick links</Typography>\r\n                  <List component=\"nav\" className={classes.root}>\r\n                    <ListItem button onClick={()=>scroll.scrollToTop()}>\r\n                      <ListItemIcon className={classes.icon}>\r\n                        <VerticalAlignTopIcon/>\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Back to top\" />\r\n                    </ListItem>\r\n                    <ListItem button onClick={()=>click(\"myAbout\",-100)}>\r\n                      <ListItemIcon className={classes.icon} >\r\n                        <InfoIcon/>\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"About\" />\r\n                    </ListItem>\r\n                    <ListItem button onClick={()=>click(\"myProjects\",-100)}>\r\n                      <ListItemIcon className={classes.icon}>\r\n                        <AssignmentIcon/>\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Projects\" />\r\n                    </ListItem>\r\n                  </List>\r\n                </Grid>\r\n                <Grid item xs>\r\n                  <Typography className={classes.Links} variant=\"h6\">Contact me</Typography>\r\n                  <List component=\"nav\" className={classes.root}>\r\n                    <ListItem button onClick={()=>externalLink('http://www.linkedin.com/in/christopher-limht')}>\r\n                      <ListItemIcon className={classes.icon}>\r\n                        <i className=\"fab fa-linkedin\"></i>  \r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"LinkedIn\" />\r\n                    </ListItem>\r\n                    <ListItem button onClick={()=>copyToClipBoard(\"christopherlimht@gmail.com\")}>\r\n                      <ListItemIcon className={classes.icon}>\r\n                        <i className=\"fas fa-envelope\"></i>\r\n                      </ListItemIcon>\r\n                      <ListItemText primary=\"Email\" />\r\n                    </ListItem>\r\n                  </List>\r\n                </Grid>\r\n                <Grid item xs>\r\n                  <Typography className={classes.Logo} variant=\"h4\">C.L</Typography>\r\n                  <Typography className={classes.Naming} variant=\"h6\">Christopher Lim</Typography>\r\n                  <p>This online Profile is developed using React, Material-UI and Font-awesome. Best viewed in desktop view, 1920 x 1080</p>\r\n                </Grid>\r\n              </Grid>\r\n            </Container>\r\n          </Container>\r\n      </React.Fragment>\r\n      </Element>\r\n    );\r\n}\r\n\r\nexport default ContactSection;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport AppbarClass from './Components/Appbar/Appbar';\nimport BannerSection from './Components/BannerSection/BannerSection';\nimport AboutSection from './Components/AboutSection/AboutSection';\nimport ProjectsSection from './Components/ProjectsSection/ProjectsSection';\nimport ContactSection from './Components/ContactSection/ContactSection';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\nconst breakpointValues = {\n  xs: 0,\n  sm: 500,\n  md: 768,\n  lg: 992,\n  xl: 1200,\n};\n\nconst theme = createMuiTheme({ \n  breakpoints: { \n    values: breakpointValues \n  }\n});\n\nReactDOM.render(\n  <React.Fragment>\n    <ThemeProvider theme={theme}>\n      <AppbarClass></AppbarClass>\n      <BannerSection></BannerSection>\n      <AboutSection></AboutSection>\n      <ProjectsSection></ProjectsSection>\n      <ContactSection></ContactSection>\n    </ThemeProvider>\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}