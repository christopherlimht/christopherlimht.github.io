{"version":3,"sources":["Components/Header/Components/NavBarButtonGroup/NavbarButtonGroup.js","Components/Header/Components/MobileMenuButton/MobileMenuButton.js","Components/Header/Header.js","Components/FrontSegment/FrontSegment.js","Components/ProjectSegment/ProjectSegment.js","Components/Footer/Footer.js","Components/ContactSegment/ContactSegment.js","App_class.js","serviceWorker.js","index.js"],"names":["NavbarButtonGroup","props","Fragment","Hidden","xsDown","implementation","Button","className","variant","color","onClick","handleClick","Typography","noWrap","useStyles","makeStyles","list","width","fullList","MobileMenuButton","classes","React","useState","left","state","setState","closeDrawer","side","open","toggleDrawer","event","type","key","sidebarItem","id","name","smUp","IconButton","edge","Drawer","onClose","role","onKeyDown","List","map","text","index","to","ListItem","button","ListItemIcon","ListItemText","primary","Divider","Navbar","display","flexDirection","justifyContent","Header","AppBar","Toolbar","icon","handleDesktopClick","FrontSegment","Container","maxWidth","component","align","gutterBottom","paragraph","heroButtons","Grid","container","spacing","justify","item","cards","ProjectSegment","xs","cardGrid","card","sm","md","Card","CardMedia","cardMedia","image","title","CardContent","cardContent","CardActions","size","Copyright","Date","getFullYear","footer","ContactSegment","App","createRef","scrollToContent","bind","content","this","current","scrollIntoView","behavior","console","log","CssBaseline","ref","Footer","Component","withStyles","theme","marginRight","backgroundColor","palette","background","paper","padding","height","alignItems","minHeight","marginTop","paddingTop","paddingBottom","flexGrow","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8614dbd3.chunk.js","sourcesContent":["import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport \"./NavbarButtonGroup.css\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { Hidden } from '@material-ui/core';\r\nimport Scrollchor from 'react-scrollchor';\r\nexport default function NavbarButtonGroup(props){\r\n    return (\r\n        <React.Fragment>\r\n            <Hidden xsDown implementation='js'>\r\n                <div>\r\n                <Button className='NavBarButton' variant=\"text\" color=\"inherit\" onClick={()=>props.handleClick(1)}>\r\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                        Home\r\n                    </Typography>\r\n                </Button>\r\n                <Button className='NavBarButton' variant=\"text\" color=\"inherit\" onClick={()=>props.handleClick(2)}>\r\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                        Projects\r\n                    </Typography>\r\n                </Button>\r\n                <Button className='NavBarButton' variant=\"text\" color=\"inherit\" onClick={()=>props.handleClick(3)}>\r\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                        Profile\r\n                    </Typography>\r\n                </Button>\r\n                </div>\r\n            </Hidden>\r\n        </React.Fragment>\r\n    );\r\n}","import React from 'react';\r\nimport \"./MobileMenuButton.css\";\r\nimport { Hidden } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport Scrollchor from 'react-scrollchor';\r\nconst useStyles = makeStyles({\r\n    list: {\r\n      width: 250,\r\n    },\r\n    fullList: {\r\n      width: 'auto',\r\n    },\r\n});\r\n\r\nexport default function MobileMenuButton(props){\r\n    const classes = useStyles();\r\n    const [state, setState] = React.useState({\r\n        left: false,\r\n    });\r\n    function testMobileMenuButton(){\r\n        console.log(\"menu button pressed\");\r\n    };\r\n    function closeDrawer(side,open){\r\n        toggleDrawer(side, open);\r\n    }\r\n    const toggleDrawer = (side, open) => event => {\r\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n          return;\r\n        }\r\n        setState({ ...state, [side]: open });\r\n    };\r\n    const sidebarItem = [\r\n      {id:\"#frontsegment\",name:\"Home\"},\r\n      {id:\"#project\",name:\"Project\"},\r\n      {id:\"#profile\",name:\"Profile\"}\r\n    ]\r\n    const sideList = side => (\r\n        <div\r\n          className={classes.list}\r\n          role=\"presentation\"\r\n          onClick={toggleDrawer(side, false)}\r\n          onKeyDown={toggleDrawer(side, false)}\r\n        >\r\n          <List>\r\n            {sidebarItem.map((text, index) => (\r\n            <Scrollchor to={text.id}>\r\n              <ListItem button key={index}  onClick={(closeDrawer('left', true))}>\r\n                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                <ListItemText primary={text.name} />\r\n              </ListItem>\r\n            </Scrollchor>\r\n            ))}\r\n          </List>\r\n          <Divider />\r\n          <List>\r\n            {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n              <ListItem button key={text}>\r\n                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                <ListItemText primary={text} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </div>\r\n      );\r\n    return (\r\n        <React.Fragment>\r\n            <Hidden smUp implementation='js'>\r\n                <div>\r\n                <IconButton\r\n                    color=\"inherit\"\r\n                    edge=\"start\"\r\n                    onClick={(toggleDrawer('left', true))}\r\n                >\r\n                    <MenuIcon />\r\n                </IconButton>\r\n                <Drawer open={state.left} onClose={(toggleDrawer('left', false))}>\r\n                    {sideList('left')}\r\n                </Drawer>\r\n                </div>\r\n            </Hidden>\r\n        </React.Fragment>\r\n    );\r\n}","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport \"./Header.css\";\r\nimport NavbarButtonGroup from './Components/NavBarButtonGroup/NavbarButtonGroup.js'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MobileMenuButton from './Components/MobileMenuButton/MobileMenuButton.js';\r\n\r\nconst useStyles = makeStyles({\r\n    Navbar: {\r\n      display:'flex',\r\n      flexDirection:'row',\r\n      justifyContent:'space-between'\r\n    },\r\n  });\r\n\r\nexport default function Header(props){\r\n    const classes = useStyles();\r\n    return (\r\n            <AppBar>\r\n                <Toolbar className={classes.Navbar}>\r\n                    <div className='Logo'>\r\n                    <LocationOnIcon className={props.icon} />\r\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                        Name\r\n                    </Typography>\r\n                    </div>\r\n                    <NavbarButtonGroup handleClick={props.handleDesktopClick}/>\r\n                    <MobileMenuButton handleClick={props.handleDesktopClick}/>\r\n                </Toolbar>\r\n            </AppBar>\r\n    );\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport \"./FrontSegment.css\"\r\n\r\nfunction FrontSegment(props){\r\n    return(\r\n        <div className={props.classes.FrontSegment}>\r\n            <Container maxWidth=\"sm\" className='FrontSegment'>\r\n                <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n                Album layout\r\n                </Typography>\r\n                <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\r\n                Something short and leading about the collection below—its contents, the creator, etc.\r\n                Make it short and sweet, but not too short so folks don&apos;t simply skip over it\r\n                entirely.\r\n                </Typography>\r\n                <div className={props.classes.heroButtons}>\r\n                    <Grid container spacing={2} justify=\"center\">\r\n                        <Grid item>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>props.handleClick(2)}>\r\n                            Main call to action\r\n                        </Button>\r\n                        </Grid>\r\n                        <Grid item>\r\n                        <Button variant=\"outlined\" color=\"primary\" onClick={()=>props.handleClick(3)}>\r\n                            Secondary action\r\n                        </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FrontSegment;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport './ProjectSegment.css';\r\n//const cards = [1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12];\r\nconst cards = [1, 2, 3,4];\r\nfunction ProjectSegment(props){\r\n    return(\r\n        <Grid container spacing={0} className='ProjectSegment'>\r\n            <Grid item className='TitleContainer'>\r\n                <Container maxWidth={false}>\r\n                    <Typography className='Title' variant=\"h4\" color=\"inherit\" noWrap>\r\n                        Projects\r\n                    </Typography>\r\n                </Container>\r\n            </Grid>\r\n            <Grid item xs={12} className='CardsContainer'>\r\n                <Container className={props.classes.cardGrid} maxWidth=\"lg\">\r\n                    {/* End hero unit */}\r\n                    <Grid container spacing={3}>\r\n                        {cards.map(card => (\r\n                        <Grid item key={card} xs={12} sm={6} md={3}>\r\n                            <Card className={props.classes.card}>\r\n                            <CardMedia\r\n                                className={props.classes.cardMedia}\r\n                                image=\"https://source.unsplash.com/random\"\r\n                                title=\"Image title\"\r\n                            />\r\n                            <CardContent className={props.classes.cardContent}>\r\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                Heading\r\n                                </Typography>\r\n                                <Typography>\r\n                                This is a media card. You can use this section to describe the content.\r\n                                </Typography>\r\n                            </CardContent>\r\n                            <CardActions>\r\n                                <Button size=\"small\" color=\"primary\">\r\n                                View\r\n                                </Button>\r\n                                <Button size=\"small\" color=\"primary\">\r\n                                Edit\r\n                                </Button>\r\n                            </CardActions>\r\n                            </Card>\r\n                        </Grid>\r\n                        ))}\r\n                    </Grid>\r\n                </Container>\r\n            </Grid>\r\n        </Grid> \r\n    )\r\n}\r\nexport default ProjectSegment;","\r\nimport React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nfunction Copyright() {\r\n    return (\r\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n        {'Created using React and Material-UI, '}\r\n        {new Date().getFullYear()}\r\n        {'.'}\r\n      </Typography>\r\n    );\r\n  }\r\n\r\n\r\nfunction footer(props){\r\n    return(\r\n        <div>\r\n        <footer className={props.classes.footer}>\r\n            <Copyright />\r\n        </footer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default footer;\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nfunction ContactSegment(props){\r\n    return(\r\n        <div className={props.classes.ContactSegment}>\r\n        <Grid container spacing={0} className='ProjectSegment'>\r\n            <Grid item className='TitleContainer'>\r\n                <Container maxWidth={false}>\r\n                    <Typography className='Title' variant=\"h4\" color=\"inherit\" noWrap>\r\n                        Profile\r\n                    </Typography>\r\n                </Container>\r\n            </Grid>\r\n        </Grid> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContactSegment;","import React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Header from './Components/Header/Header.js';\r\nimport FrontSegment from './Components/FrontSegment/FrontSegment.js';\r\nimport ProjectSegment from './Components/ProjectSegment/ProjectSegment.js';\r\nimport Footer from './Components/Footer/Footer.js'\r\nimport ContactSegment from './Components/ContactSegment/ContactSegment.js';\r\n\r\nconst useStyles = (theme) => ({\r\n    icon: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    FrontSegment: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      padding: theme.spacing(8, 0, 6),\r\n      height: '100vh',\r\n      alignItems: 'center',\r\n      display:'flex'\r\n    },\r\n    ContactSegment:{\r\n      backgroundColor: theme.palette.background.paper,\r\n      minHeight: 'calc(100vh - 64px)',\r\n      alignItems: 'center',\r\n      display:'flex'\r\n    },\r\n    heroButtons: {\r\n      marginTop: theme.spacing(4),\r\n    },\r\n    cardGrid: {\r\n      paddingTop: theme.spacing(8),\r\n      paddingBottom: theme.spacing(8),\r\n    },\r\n    card: {\r\n      height: '100%',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n    },\r\n    cardMedia: {\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    cardContent: {\r\n      flexGrow: 1,\r\n    },\r\n    footer: {\r\n      padding: theme.spacing(2),\r\n    },\r\n  });\r\n\r\nclass App extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.FrontSegment = React.createRef();\r\n        this.ProjectSegment = React.createRef();\r\n        this.ContactSegment = React.createRef();\r\n        this.scrollToContent = this.scrollToContent.bind(this);\r\n    }\r\n    \r\n    scrollToContent(content) {\r\n      switch(content) {\r\n        case 1:\r\n          this.FrontSegment.current.scrollIntoView({behavior: 'smooth'});\r\n          console.log(\"Navigating to Home..\")\r\n          break;\r\n        case 2:\r\n          this.ProjectSegment.current.scrollIntoView({behavior: 'smooth'});\r\n          console.log(\"Navigating to Project..\")\r\n          break;\r\n        case 3:\r\n          this.ContactSegment.current.scrollIntoView({behavior: 'smooth'});\r\n          console.log(\"Navigating to Profile..\")\r\n          break;\r\n      }\r\n    }\r\n    render(){\r\n        const {classes} = this.props;\r\n        return (\r\n          <React.Fragment>\r\n            <CssBaseline />\r\n            <Header icon={classes.icon} handleDesktopClick={this.scrollToContent}/>\r\n            <main>\r\n              {/* Hero unit */}\r\n              <div ref={this.FrontSegment} id='frontsegment'/>\r\n              <FrontSegment classes={classes} handleClick={this.scrollToContent} />\r\n              <div ref={this.ProjectSegment} id='project'/>\r\n              <ProjectSegment classes={classes}/>\r\n            </main>\r\n            {/* Footer */}\r\n            <div ref={this.ContactSegment} id='profile'/>\r\n            <ContactSegment classes={classes}/>\r\n            <Footer classes={classes}/>\r\n        </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App_class';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}